{"version":3,"sources":["actions/index.js","components/utils.js","components/map/Map.js","components/sidebar/FileDrop.jsx","components/sidebar/Layer.js","components/sidebar/LayerList.js","containers/CreateLayerList.js","components/sidebar/Sidebar.js","components/tools/Buffer.js","components/tools/Difference.js","components/tools/Voronoi.js","components/tools/Within.js","components/tools/doDoubleFeatureAction.js","components/tools/Intersection.js","components/tools/Tools.js","components/tools/ToolsPopup.js","components/MainWrapper.js","registerServiceWorker.js","reducers/layers.js","reducers/rootReducer.js","index.js"],"names":["addLayer","layer","type","lastId","colors","formatJson","json","name","noBorder","opacity","visible","id","fillColor","length","fillOpacity","borderColor","mapboxgl","accessToken","Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","layersInMap","lng","lat","zoom","_this2","_this$state","map","container","mapContainer","style","center","_map","addControl","NavigationControl","on","addDefaultLayers","bind","_map$getCenter","getCenter","setState","toFixed","getZoom","updateMapLayers","deleteLayers","addLayers","i","getSource","removeLayer","removeSource","layers","source","addVectorLayer","addLayerByType","features","geometry","addPolygonLayer","addLineLayer","addPointLayer","console","log","data","layout","visibility","paint","circle-radius","circle-color","circle-opacity","line-color","line-opacity","line-width","fill-color","fill-opacity","url","source-layer","sourceLayer","formated","nedreElvehavn","format2","grytaNord","format3","grytaSyd","_this3","_this$state2","react_default","a","createElement","className","ref","el","Component","mapDispatchToProps","connect","_ref","dispatch","readFile","file","callback","reader","FileReader","onload","e","JSON","parse","target","result","ex","alert","readAsText","index_es","dropzoneText","filesLimit","dropZoneClass","dropzoneParagraphClass","acceptedFiles","onDrop","onDelete","deleteLayer","showPreviewsInDropzone","NestedList","open","layerName","handleClick","changeFillColor","color","undefined","updateLayerFill","changeBorderColor","updateLayerBorder","updateInput","value","changeName","updateLayerName","window","confirm","toggleVisibility","stopPropagation","updateLayerVisibility","classes","List_default","component","root","ListItem_default","button","onClick","ListItemIcon_default","Visibility_default","VisibilityOff_default","ListItemText_default","inset","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","disablePadding","nested","Title_default","TextField_default","onChange","label","margin","IconButton_default","iconButton","aria-label","Done_default","FormatColorFill_default","lib_default","defaultValue","BorderColor_default","Button_default","Divider_default","React","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","unit","LayerList","Fragment","ListSubheader_default","Layer","assign","key","layerID","Sidebar","handleDrawerOpen","handleDrawerClose","_this$props","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","FileDrop","CreateLayerList","display","transition","transitions","create","easing","sharp","duration","leavingScreen","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","withTheme","BufferContent","handleChange","event","updateText","bufferVal","geom","filter","buffer","turf","units","bufferName","close","actions","core_index_es","form","submitBuffer","autoComplete","select","textField","SelectProps","MenuProps","menu","helperText","MenuItem_default","Info_default","flexWrap","dense","marginTop","DifferenceContent","layer1","layer2","geom1","geom2","difference","differenceName","properties","submitDifference","voronoiPolygons","isMultiPolygon","FC","convertToPolygons","polygons","forEach","poly","coordinates","coord","polygon","push","doDoubleFeatureAction","FeatureCollection1","FeatureCollection2","action","actionType","multi","newGeojson","poly1","poly2","newGeometry","newName","intersection","tools","icon","Inbox_default","Tools","btnClicked","tool","buttonClick","DialogTitle","borderBottom","divider","closeButton","right","top","grey","children","onClose","DialogTitle_default","disableTypography","Close_default","DialogContent","MuiDialogContent","CustomizedDialogDemo","borderTop","MuiDialogActions","selectedTool","handleClickOpen","handleClose","ButtonClicked","btn","getContent","Within","Buffer","Intersection","Difference","Voronoi","tools_Tools","Fab_default","fab","Build_default","Dialog_default","aria-labelledby","ToolsPopup_DialogTitle","ToolsPopup_DialogContent","float","bottom","extendedIcon","MapWrapperDiv","styled","div","_templateObject","MapWrapper","receivedJson","sidebar_Sidebar","map_Map","ToolsPopup","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initialState","arguments","toConsumableArray","slice","todo","completed","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","MainWrapper","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.62facaba.chunk.js","sourcesContent":["\nexport const addLayer = layer => ({\n  type: 'ADD_LAYER',\n  layer\n})\n\nexport const deleteLayer = layer => ({\n  type: 'DELETE_LAYER',\n  layer\n})\n\nexport const updateLayers = layer => ({\n  type: 'UPDATE_LAYERS',\n  layer\n})\n\nexport const updateLayerFill = (layerID, fillColor) => ({\n  type: 'UPDATE_LAYER_FILL',\n  layerID,\n  fillColor\n})\nexport const updateLayerBorder = (layerID, borderColor) => ({\n  type: 'UPDATE_LAYER_BORDER',\n  layerID,\n  borderColor\n})\n\nexport const updateLayerVisibility = (layerID, visibility) => ({\n  type: 'UPDATE_LAYER_VISIBILITY',\n  layerID,\n  visibility\n})\n\nexport const updateLayerName = (layerID, name) => ({\n  type: 'UPDATE_LAYER_NAME',\n  layerID,\n  name\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\n","// let layers = 0;\nlet lastId = 0;\nlet colors = ['#ff1744', '#2979ff', '#00b8d4', '#00bfa5',  '#ff6d00', '#00bfa5', '#ffd600', '#d50000' ]\n\nexport default function formatJson(json, name, noBorder, opacity) {\n    if(!json.name)\n      json.name = \"Layer\"\n    if(name)\n      json.name = name\n    if(!json.visible)\n      json.visible = \"visible\"\n    if(!json.id)\n      json.id = \"layer-\"+lastId;\n    if(!json.fillColor)\n      json.fillColor = colors[lastId%colors.length]\n    json.fillOpacity = opacity?opacity:1\n    if(!noBorder && !json.borderColor)\n      json.borderColor = \"black\"\n    if(noBorder)\n      json.borderColor = null\n    lastId++;\n    return json\n}\n","import React, { Component } from 'react'\nimport '../../styles/map.css'\nimport mapboxgl from 'mapbox-gl'\n//json files in map\nimport grytaNord from './mapLayers/gryta-nord.json';\nimport grytaSyd from './mapLayers/gryta-syd.json';\nimport nedreElvehavn from './mapLayers/nedre-elvehavn.json';\n\n//Redux\nimport { connect } from \"react-redux\";\nimport { addLayer } from '../../actions'\n\nimport formatJson from '../utils';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n\nclass Map extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      layersInMap: [],\n      lng: 10.4,        //Trondheim\n      lat: 63.435,\n      zoom: 15\n    };\n  }\n\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v10',\n      center: [lng, lat],\n      zoom\n    });\n    \n    this._map = map;\n    // Add zoom and rotation controls to the map.\n    map.addControl(new mapboxgl.NavigationControl());\n\n    map.on('load', function () {\n      this.addDefaultLayers();\n    }.bind(this));\n\n     map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n  }\n  componentDidUpdate() {\n    this.updateMapLayers()\n  }\n\n  updateMapLayers(props){\n    this.deleteLayers();\n    this.addLayers();    \n  }\n\n  deleteLayers(){\n    debugger\n    for (let i = 0; i < this.state.layersInMap.length; i++) {\n      if(this._map.getSource(this.state.layersInMap[i].id)){\n        this._map.removeLayer(this.state.layersInMap[i].id)\n        this._map.removeSource(this.state.layersInMap[i].id)\n      }\n      if(this._map.getSource(this.state.layersInMap[i].id+'_outline')){\n        this._map.removeLayer(this.state.layersInMap[i].id + '_outline')\n        this._map.removeSource(this.state.layersInMap[i].id + '_outline')\n      }\n\n    }\n  }\n\n  addLayers(){\n    for (let i = 0; i < this.props.layers.length; i++) {\n      let layer = this.props.layers[i]\n      if(layer.source)\n        this.addVectorLayer(layer)  \n      else \n        this.addLayerByType(this.props.layers[i]);\n        \n    }\n    this.state.layersInMap = this.props.layers;\n  }\n\n  addLayerByType(layer){\n    debugger\n    let type = layer.features?layer.features[0].geometry.type : layer.geometry.type //FIX: Some layers received from Turf doesn't have features\n    switch (type) {\n      case 'Polygon':\n        this.addPolygonLayer(layer);\n        break;\n      case 'MultiPolygon':\n        this.addPolygonLayer(layer);\n        break;\n      case 'MultiLineString':\n        this.addLineLayer(layer);\n        break;\n      case 'Point':\n        this.addPointLayer(layer);\n        break;\n      default:\n        console.log('Unidentified layer type!!' + layer.type);\n        \n    }\n  }\n\n\n  addPointLayer(layer) {\n    this._map.addLayer({\n      'id': layer.id,\n      'type': 'circle',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'circle-radius': 5,\n        'circle-color': layer.fillColor,\n        'circle-opacity': 1\n      }\n    });\n  }\n\n\n  addLineLayer(layer) {\n    let map = this._map\n    map.addLayer({\n      'id': layer.name,\n      'type': 'line',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'line-color': layer.borderColor,\n        'line-opacity': 1,\n        'line-width': 2\n      }\n    });\n\n  }\n  \n\n  addPolygonLayer(layer) {\n    let map = this._map\n\n    map.addLayer({\n      'id': layer.id,\n      'type': 'fill',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'fill-color': layer.fillColor,\n        'fill-opacity': layer.fillOpacity\n      }\n    });\n\n    map.addLayer({\n      'id': layer.id + '_outline',\n      'type': 'line',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'line-color': layer.borderColor,\n        'line-opacity': 1 ,\n        'line-width': 1\n      }\n    });\n  }\n\n  addVectorLayer(layer){ \n    this._map.addLayer({\n      'id': layer.id,\n      'type': 'fill',\n      'source': {\n        type: 'vector',\n        url: layer.source\n      },\n      'source-layer': layer.sourceLayer,\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'fill-color': layer.fillColor,\n        'fill-opacity': layer.fillOpacity,\n      }\n    })\n  }\n\n\n  addDefaultLayers(){\n    let formated = formatJson(nedreElvehavn,'Nedre elvehavn', true)\n    this.props.addLayer(formated) \n    let format2 = formatJson(grytaNord, 'Gryta nord', true)\n    this.props.addLayer(format2) \n    let format3 = formatJson(grytaSyd, 'Gryta syd', true)\n    this.props.addLayer(format3) \n\n  }\n\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n        <div className=\"map\" ref={el => this.mapContainer = el} />\n    );\n  }\n}\n\n\n\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Map);","import React, {Component} from 'react';\nimport {DropzoneArea} from 'material-ui-dropzone';\nimport { connect } from 'react-redux'\nimport { addLayer } from '../../actions'\nimport '../../styles/App.css'\nimport formatJson from '../utils';\nimport validator from 'validator';\n\n\nconst Filedrop = ({dispatch}) => {\n  \n  function setupReader(file) {\n    readFile(file, function (json) {\n      dispatch(addLayer(json))\n    });\n  }\n\n  function readFile(file, callback){\n    let reader = new FileReader();\n\n    reader.onload = function(e){\n      try{\n        let json = JSON.parse(e.target.result)\n        callback(formatJson(json));\n      } catch(ex){\n        alert('ex when trying to parse json = ' + ex);\n      }\n    }\n\n    reader.readAsText(file);\n  }\n\n  function deleteLayer(file){\n    readFile(file, function (json) {\n      dispatch(deleteLayer(json))\n    });\n  }\n\n  return (\n    <DropzoneArea \n        dropzoneText={\"Drop Json-files here\"} \n        filesLimit={8}\n        dropZoneClass={\"HalloKlasse\"}\n        dropzoneParagraphClass={\"TekstDrop\"}\n        acceptedFiles= {['application/json/*']} \n        onDrop={setupReader}\n        onDelete={deleteLayer}\n        showPreviewsInDropzone={false}\n        />\n  )\n}\n \nexport default connect()(Filedrop);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Title from '@material-ui/icons/Title';\nimport FormatColorFill from '@material-ui/icons/FormatColorFill';\nimport BorderColor from '@material-ui/icons/BorderColor';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Divider from '@material-ui/core/Divider';\nimport ColorPicker from 'material-ui-color-picker'\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '@material-ui/core/Button';\n\n\n\n\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass NestedList extends React.Component {\n  state = {\n    open: false,\n    visible: this.props.visible,\n    layerName: this.props.name\n  }\n\n  handleClick = () => {\n    this.setState(state => ({ open: !state.open }));\n  }\n\n  changeFillColor = (color) =>{\n    if(color!=undefined)\n      this.props.updateLayerFill(this.props.id, color)\n  }\n  changeBorderColor = (color) =>{\n    if(color!=undefined)\n      this.props.updateLayerBorder(this.props.id, color)\n  }\n\n  updateInput=(e)=>{\n    this.setState({layerName: e.target.value})\n  }\n\n  changeName = () =>{\n    this.props.updateLayerName(this.props.id, this.state.layerName)\n  }\n\n  deleteLayer = () =>{\n    if(window.confirm(\"Are you sure you want to delete the layer: \"+ this.props.name))\n      this.props.deleteLayer(this.props.id)\n  }\n\n  toggleVisibility = (e) =>{\n    e.stopPropagation();\n    this.setState(state => ({ visible: !state.visible }));\n    this.props.updateLayerVisibility(this.props.id, (this.props.visible == \"visible\"? \"none\":\"visible\"))\n    \n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <List\n        component=\"nav\"\n        className={classes.root}\n      >\n        <ListItem button onClick={this.handleClick}>\n          <ListItemIcon>\n          {this.props.visible == \"visible\" ? <Visibility button onClick={this.toggleVisibility.bind(this)} /> : <VisibilityOff button onClick={this.toggleVisibility} />}\n          </ListItemIcon>\n          <ListItemText inset primary={this.props.name} />\n          {this.state.open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem  className={classes.nested} >\n              <ListItemIcon>\n                <Title />\n              </ListItemIcon>\n              <TextField\n                onChange={this.updateInput.bind(this)}\n                id=\"standard-dense\"\n                label=\"Edit name\"\n                margin=\"dense\"\n              />\n              <IconButton className={classes.iconButton} aria-label=\"Change\" onClick={this.changeName.bind(this)}>\n                <DoneIcon />\n              </IconButton>\n\n            </ListItem>\n            <ListItem button className={classes.nested}>\n              <ListItemIcon>\n                <FormatColorFill />\n              </ListItemIcon>\n              <ListItemText inset primary=\"Fill color\" />\n              <ColorPicker\n                name='color'\n                defaultValue={this.props.fillColor}\n                onChange={this.changeFillColor.bind(this)}\n              />\n            </ListItem>\n            <ListItem button className={classes.nested}>\n              <ListItemIcon>\n                <BorderColor />\n              </ListItemIcon>\n              <ListItemText inset primary=\"Border color\" />\n              <ColorPicker\n                name='color'\n                defaultValue={this.props.borderColor}\n                onChange={this.changeBorderColor.bind(this)}\n              />\n            </ListItem>\n            <ListItem  className={classes.nested}>\n            <Button \n              color=\"secondary\" \n              className={classes.button}\n              onClick={this.deleteLayer.bind(this)}>\n              Delete layer\n            </Button>\n            <Divider/>\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    );\n  }\n}\n\n\nNestedList.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(NestedList);","import React from 'react'\nimport PropTypes from 'prop-types'\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Layer from './Layer' \n\n\nconst LayerList = ({ layers, updateLayerVisibility, updateLayerFill, updateLayerBorder, updateLayerName, deleteLayer }) => (\n  <React.Fragment>\n    {layers.length>0?<ListSubheader>LAYERS</ListSubheader>:null}\n    <List>\n      {layers.length>0?(layers.map(layer =>\n        <Layer\n          key={layer.id}\n          layer={layer.name}\n          updateLayerVisibility={updateLayerVisibility}\n          updateLayerFill={updateLayerFill}\n          updateLayerBorder={updateLayerBorder}\n          updateLayerName={updateLayerName}\n          deleteLayer={deleteLayer}\n          {...layer}\n        />\n      )) : <div></div>}\n      \n    </List>\n  </React.Fragment>\n  \n)\n\nLayerList.propTypes = {\n  layers: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    visible: PropTypes.bool.isRequired,\n    color: PropTypes.string.isRequired,\n    border: PropTypes.string.isRequired\n  }).isRequired).isRequired,\n}\n\nexport default LayerList\n","import { connect } from \"react-redux\";\nimport { updateLayerVisibility, updateLayerFill, updateLayerBorder, updateLayerName, deleteLayer} from \"../actions\"; //Redux actions\nimport LayerList from \"../components/sidebar/LayerList\";\n\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\n\nconst mapDispatchToProps ={\n  updateLayerVisibility,\n  updateLayerFill,\n  updateLayerBorder, \n  updateLayerName,\n  deleteLayer\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayerList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n//Material ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n//Components and containers\nimport FileDrop from './FileDrop';\nimport CreateLayerList from '../../containers/CreateLayerList'\n\n\nconst drawerWidth = 340;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass Sidebar extends React.Component {\n  state = {\n    open: false,\n    // receivedJson: this.props.receivedJson\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          color=\"primary\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n          \n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              GISLYFE\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <FileDrop ></FileDrop>\n          <Divider />\n          <CreateLayerList></CreateLayerList>\n          \n        \n        </Drawer>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Sidebar);","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { updateLayers } from \"../../actions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Typography, IconButton, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as turf from '@turf/turf'\nimport { addLayer } from '../../actions'\nimport formatJson from '../utils';\n\n\n  const styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nclass BufferContent extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {layer: null}\n  }\n\n  // Changehandler - layerselect \n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  // Changehandler - bufferfield\n  updateText = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  submitBuffer(){\n    if(this.state != null && this.state.layer && this.state.bufferVal){\n      let geom = this.props.layers.filter(layer => layer.id == this.state.layer)[0];\n      let buffer = turf.buffer(geom, this.state.bufferVal, {units: 'meters'});      //Buffer geojson\n      let bufferName = geom.name + \"_Buffer\"\n      this.props.addLayer(formatJson(buffer,bufferName, true, 0.5))                 //formatJson buffer-geojson, name, noBorder, fill-opacity\n      this.props.close();\n\n    } else{\n      alert(\"Velg layer og bufferverdi\")\n    }\n   \n  }\n\n\n  render() {\n    const actions = [\n        <Button\n          primary={true}\n          form=\"myform\"\n          onClick={this.submitBuffer.bind(this)}\n          >SUBMIT\n          </Button>,\n      ];\n\n    return (\n    <React.Fragment>\n    {this.props.layers.length>0?\n      <form className={this.props.classes.container} autoComplete=\"off\" id = \"myform\">\n        <TextField\n          id=\"standard-select-currency\"\n          select\n          label=\"Layer\"\n          className={this.props.classes.textField}\n          value = {this.state.layer}\n          onChange={this.handleChange('layer')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers.map(layer => (\n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        \n        <TextField\n          id=\"standard-name\"\n          label=\"Buffer\"\n          className={this.props.classes.textField}\n          onChange={this.updateText('bufferVal')}\n          margin=\"normal\"\n          helperText=\"Value in meter\"\n\n        />\n        <div>\n            {actions} \n        </div> \n        \n      </form>\n    :\n        <React.Fragment>\n            <IconButton>\n                <InfoIcon />\n            </IconButton>\n            <Typography variant=\"h7\" color=\"inherit\">\n                Add layers in map. \n            </Typography>\n        </React.Fragment>\n    }   \n    </React.Fragment>\n      \n    );\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(BufferContent));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Typography, IconButton, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as turf from '@turf/turf'\nimport { addLayer } from '../../actions'\nimport formatJson from '../utils';\n\n\n\n  const styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nclass DifferenceContent extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        layer1: null,\n        layer2: null      \n    }\n  }\n\n  // Changehandler - layerselect \n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  submitDifference(){\n    if(this.state == null || this.state.layer1 == null || this.state.layer2 == null){\n      alert(\"Velg to lag til kalkulering\")\n    } else if(this.state.layer1 == this.state.layer2)\n        alert(\"Lag 1 og Lag 2 må være forskjellige\")  \n    else{\n      let geom1 = this.props.layers.filter(layer => layer.id == this.state.layer1)[0].features[0];\n      let geom2 = this.props.layers.filter(layer => layer.id == this.state.layer2)[0].features[0];\n      let difference = turf.difference(geom1, geom2);      //Difference geojson\n      if(difference != null){\n        let differenceName = geom1.properties.name+\"_\"+geom2.properties.name + \"_Difference\"\n        this.props.addLayer(formatJson(difference,differenceName, true, 0.5))    //formatJson difference-geojson, name, noBorder, fill-opacity\n        this.props.close();\n      }\n      \n    } \n   \n  }\n\n\n  render() {\n    const actions = [\n        <Button\n          primary={true}\n          form=\"myform\"\n          onClick={this.submitDifference.bind(this)}\n          >SUBMIT\n          </Button>,\n      ];\n\n    return (\n    <React.Fragment>\n    {this.props.layers.length>0?\n      <form className={this.props.classes.container} autoComplete=\"off\" id = \"myform\">\n        <TextField\n          id=\"layer1-select\"\n          select\n          label=\"Layer 1\"\n          className={this.props.classes.textField}\n          value = {this.state.layer1}\n          onChange={this.handleChange('layer1')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers.map(layer => (\n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"layer2-select\"\n          select\n          label=\"Layer 2\"\n          className={this.props.classes.textField}\n          value = {this.state.layer2}\n          onChange={this.handleChange('layer2')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers\n          .filter(layer =>{return layer.features[0].geometry.type == \"Polygon\"||layer.features[0].geometry.type == \"MultiPolygon\"}) //only Polygons and multipolygons are accepted\n          .map(layer => (  \n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        \n        <div>\n            {actions} \n        </div> \n        \n      </form>\n    :\n        <React.Fragment>\n            <IconButton>\n                <InfoIcon />\n            </IconButton>\n            <Typography variant=\"h7\" color=\"inherit\">\n                Add layers in map. \n            </Typography>\n        </React.Fragment>\n    }   \n    </React.Fragment>\n      \n    );\n  }\n}\n\n\n//REDUX\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DifferenceContent));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { updateLayers } from \"../../actions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Typography, IconButton, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as turf from '@turf/turf'\nimport { addLayer } from '../../actions'\nimport formatJson from '../utils';\n\n\n  const styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nclass DifferenceContent extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        layer: null\n    }\n  }\n\n  // Changehandler - layerselect \n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  submitDifference(){\n    if(this.state.layer == null ){\n      alert(\"Velg et lag til å lage voronoi\")\n    } \n    else{\n      // layer.features[0].geometry.type == \"Point\"\n      let geom = this.props.layers.filter(layer => layer.id == this.state.layer)[0];\n      // var options = {\n      //   bbox: [-70, 40, -60, 60]\n      // };\n      // var points = turf.randomPoint(100, options);\n      debugger\n      var voronoiPolygons = turf.voronoi(geom);\n      let name = geom.name+\"_voronoi\";\n      // let geom1 = this.props.layers.filter(layer => layer.id == this.state.layer1)[0].features[0];\n      // let difference = turf.difference(geom1, geom2);      //Difference geojson\n      // let differenceName = geom1.properties.name+\"_\"+geom2.properties.name + \"_Difference\"\n      this.props.addLayer(formatJson(voronoiPolygons,name, true, 0.5))    //formatJson difference-geojson, name, noBorder, fill-opacity\n      this.props.close();\n    } \n   \n  }\n\n\n  render() {\n    const actions = [\n        <Button\n          primary={true}\n          form=\"myform\"\n          onClick={this.submitDifference.bind(this)}\n          >SUBMIT\n          </Button>,\n      ];\n\n    return (\n    <React.Fragment>\n    {this.props.layers.length>0?\n      <form className={this.props.classes.container} autoComplete=\"off\" id = \"myform\">\n        <TextField\n          id=\"layer1-select\"\n          select\n          label=\"Layer 1\"\n          className={this.props.classes.textField}\n          value = {this.state.layer1}\n          onChange={this.handleChange('layer')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers\n          .filter(layer =>{return layer.features[0].geometry.type == \"Point\"})\n          .map(layer => (  \n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        \n        <div>\n            {actions} \n        </div> \n        \n      </form>\n    :\n        <React.Fragment>\n            <IconButton>\n                <InfoIcon />\n            </IconButton>\n            <Typography variant=\"h7\" color=\"inherit\">\n                Add layers in map. \n            </Typography>\n        </React.Fragment>\n    }   \n    </React.Fragment>\n      \n    );\n  }\n}\n\n\n//REDUX\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DifferenceContent));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { updateLayers } from \"../../actions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Typography, IconButton, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InfoIcon from '@material-ui/icons/Info';\nimport * as turf from '@turf/turf'\nimport { addLayer } from '../../actions'\nimport formatJson from '../utils';\n\n\n  const styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nclass DifferenceContent extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        layer1: null,\n        layer2: null      \n    }\n  }\n\n  // Changehandler - layerselect \n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  submitDifference(){\n    if(this.state == null || this.state.layer1 == null || this.state.layer2 == null){\n      alert(\"Velg to lag til kalkulering\")\n    } else if(this.state.layer1 == this.state.layer2)\n        alert(\"Lag 1 og Lag 2 må være forskjellige\")  \n    else{\n        debugger\n      let geom1 = this.props.layers.filter(layer => layer.id == this.state.layer1)[0].features[0];\n      let geom2 = this.props.layers.filter(layer => layer.id == this.state.layer2)[0].features[0];\n      let difference = turf.difference(geom1, geom2);      //Difference geojson\n      let differenceName = geom1.properties.name+\"_\"+geom2.properties.name + \"_Difference\"\n      this.props.addLayer(formatJson(difference,differenceName, true, 0.5))    //formatJson difference-geojson, name, noBorder, fill-opacity\n      this.props.close();\n    } \n   \n  }\n\n\n  render() {\n    const actions = [\n        <Button\n          primary={true}\n          form=\"myform\"\n          onClick={this.submitDifference.bind(this)}\n          >SUBMIT\n          </Button>,\n      ];\n\n    return (\n    <React.Fragment>\n    {this.props.layers.length>0?\n      <form className={this.props.classes.container} autoComplete=\"off\" id = \"myform\">\n        <TextField\n          id=\"layer1-select\"\n          select\n          label=\"Layer 1\"\n          className={this.props.classes.textField}\n          value = {this.state.layer1}\n          onChange={this.handleChange('layer1')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers.map(layer => (\n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          id=\"layer2-select\"\n          select\n          label=\"Layer 2\"\n          className={this.props.classes.textField}\n          value = {this.state.layer2}\n          onChange={this.handleChange('layer2')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers.map(layer => (\n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        \n        <div>\n            {actions} \n        </div> \n        \n      </form>\n    :\n        <React.Fragment>\n            <IconButton>\n                <InfoIcon />\n            </IconButton>\n            <Typography variant=\"h7\" color=\"inherit\">\n                Add layers in map. \n            </Typography>\n        </React.Fragment>\n    }   \n    </React.Fragment>\n      \n    );\n  }\n}\n\n\n//REDUX\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DifferenceContent));","import formatJson from '../utils';\nimport * as turf from '@turf/turf'\n\n\n\nconst doDoubleFeatureAction=(FeatureCollection1, FeatureCollection2, action, actionType, multi)=> {\n    let newGeojson = {\n      \"type\": \"FeatureCollection\",\n      \"features\": []\n    }\n    \n\n    if(!multi && isMultiPolygon(FeatureCollection1)){\n        FeatureCollection1.features = convertToPolygons(FeatureCollection1)\n    } \n    if(!multi && isMultiPolygon(FeatureCollection2 )){\n        FeatureCollection2.features = convertToPolygons(FeatureCollection2)\n    } \n\n    FeatureCollection1.features.forEach(poly1 => {\n        FeatureCollection2.features.forEach(poly2 => {\n            let newGeometry = action(poly1.geometry, poly2.geometry)\n            if(newGeometry!= null)\n                newGeojson.features.push(newGeometry)\n        });\n    });\n    \n    let newName = FeatureCollection1.name+\"_\"+FeatureCollection2.name + \"_\"+ actionType;\n\n    return(formatJson(newGeojson,newName, true, 0.5));\n  }\nconst isMultiPolygon = (FC)=>{  \n    if(FC.features[0].geometry.type == \"MultiPolygon\")\n        return true\nreturn false\n}\n\nconst convertToPolygons = (FC)=>{  \n    let polygons =[] \n    FC.features.forEach(poly=>{\n        if(poly.geometry.type == \"MultiPolygon\"){\n            poly.geometry.coordinates.forEach(coord=>{\n                let polygon = turf.polygon(coord)\n                polygons.push(polygon)\n            })\n        }\n    });\n    return polygons;\n}\n\n  \n\n  export default doDoubleFeatureAction","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\nimport { updateLayers } from \"../../actions\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Typography, IconButton, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { addLayer } from '../../actions'\nimport  intersect from '@turf/intersect';\nimport * as turf from '@turf/turf'\nimport doDoubleFeatureAction from './doDoubleFeatureAction';\nimport formatJson from '../utils';\n\n  const styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nclass DifferenceContent extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n        layer1: null,\n        layer2: null      \n    }\n  }\n\n  // Changehandler - layerselect \n  handleChange = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  submitDifference(){\n    if(this.state.layer1 == null ||this.state.layer2 == null)\n      alert(\"Velg to lag til utregning.\")\n    else if(this.state.layer1 == this.state.layer2)\n      alert(\"Vennligst velg 2 forskjellige lag.\")\n    \n    //Get geojson from state \n    let geom1 = this.props.layers.filter(layer => layer.id == this.state.layer1)[0]  \n    let geom2 = this.props.layers.filter(layer => layer.id == this.state.layer2)[0]\n    let intersection = doDoubleFeatureAction(geom1, geom2, turf.intersect, \"intersection\")\n    \n    if(intersection.features.length == 1 && intersection.features[0] == null)\n      alert(\"Det er ingen overlapp mellom valgte lag.\")\n    else{\n      debugger\n      this.props.addLayer(formatJson(intersection))    //formatJson difference-geojson, name, noBorder, fill-opacity\n      this.props.close();\n    }\n  }\n\n\n  render() {\n    const actions = [\n        <Button\n          primary={true}\n          form=\"myform\"\n          onClick={this.submitDifference.bind(this)}\n          >SUBMIT\n          </Button>,\n      ];\n\n    return (\n    <React.Fragment>\n    {this.props.layers.length>0?\n      <form className={this.props.classes.container} autoComplete=\"off\" id = \"myform\">\n        <TextField\n          id=\"layer1-select\"\n          select\n          label=\"Layer 1\"\n          className={this.props.classes.textField}\n          value = {this.state.layer1}\n          onChange={this.handleChange('layer1')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers\n          .filter(layer =>{return layer.features[0].geometry.type == \"Polygon\"||layer.features[0].geometry.type == \"MultiPolygon\"})\n          .map(layer => (  \n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n\n       \n        </TextField>\n        <TextField\n          id=\"layer2-select\"\n          select\n          label=\"Layer 2\"\n          className={this.props.classes.textField}\n          value = {this.state.layer2}\n          onChange={this.handleChange('layer2')}\n          SelectProps={{\n            MenuProps: {\n              className: this.props.classes.menu,\n            },\n          }}\n          helperText=\"Select layer\"\n          margin=\"normal\"\n        >\n          {this.props.layers\n          .filter(layer =>{return layer.features[0].geometry.type == \"Polygon\"||layer.features[0].geometry.type == \"MultiPolygon\"}) //only Polygons and multipolygons are accepted\n          .map(layer => (  \n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n        </TextField>\n        \n        <div>\n            {actions} \n        </div> \n        \n      </form>\n    :\n        <React.Fragment>\n            <IconButton>\n                <InfoIcon />\n            </IconButton>\n            <Typography variant=\"h7\" color=\"inherit\">\n                Add layers in map. \n            </Typography>\n        </React.Fragment>\n    }   \n    </React.Fragment>\n      \n    );\n  }\n}\n\n\n//REDUX\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(DifferenceContent));","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\n// import { updateLayers } from \"../actions\";\nimport { Layer } from 'react-mapbox-gl';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/Inbox';\n\n\n\nconst tools = [\n    {\n      value: 'Within',\n      icon: <InboxIcon />,\n    },\n    {\n        value: 'Buffer',\n        icon: <InboxIcon />,\n    },\n    {\n      value: 'Intersection',\n      icon: <InboxIcon />,\n    },\n    {\n      value: 'Difference',\n      icon: <InboxIcon />,\n    },\n  ];\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n    float: \"right\",\n    bottom: '80px',\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass Tools extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      layersInMap: [],\n    };\n  }\n\n  buttonClick(e,value){\n      console.log(value)\n      this.props.btnClicked(value)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n        {tools.map(tool => (\n            <ListItem  id = {tool.value} onClick={((e) => this.buttonClick(e, tool.value))}>\n                <ListItemIcon>\n                    {tool.icon}\n                </ListItemIcon>\n                <ListItemText primary={tool.value} />\n            </ListItem>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tools;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n//Material-ui\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport BuildIcon from '@material-ui/icons/Build';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n//Components\nimport Buffer from './Buffer';\nimport Difference from './Difference';\nimport Voronoi from './Voronoi';\nimport Within from './Within';\nimport Intersection from './Intersection';\nimport Tools from './Tools';\n\n\n\n\nfunction ListItemLink(props) {\n    return <ListItem button component=\"a\" {...props} />;\n  }\nconst styles = theme => ({\n    fab: {\n      margin: theme.spacing.unit,\n      float: \"right\",\n      bottom: '80px',\n    },\n    extendedIcon: {\n      marginRight: theme.spacing.unit,\n    },\n  });\n\nconst DialogTitle = withStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing.unit,\n    top: theme.spacing.unit,\n    color: theme.palette.grey[500],\n  },\n}))(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing.unit,\n  },\n}))(MuiDialogActions);\n\nclass CustomizedDialogDemo extends React.Component {\n  state = {\n    open: false,\n    selectedTool: null\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false, selectedTool: null });\n  };\n\n  ButtonClicked= (btn) => {\n    this.setState({\n      selectedTool: btn,\n    });\n  }  \n\n  getContent = () => {\n    switch(this.state.selectedTool) {\n      case 'Within':\n        return <ListItem><Within close ={this.handleClose}></Within></ListItem>;\n      case 'Buffer':\n        return <ListItem><Buffer close ={this.handleClose}></Buffer></ListItem>;\n      case 'Intersection':\n        return <ListItem><Intersection close ={this.handleClose}></Intersection></ListItem>;\n      case 'Difference':\n        return <ListItem><Difference close ={this.handleClose}></Difference></ListItem>;\n      case 'Voronoi':\n        return <ListItem><Voronoi close ={this.handleClose}></Voronoi></ListItem>;\n      default:\n        return <Tools btnClicked= {this.ButtonClicked}></Tools>;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Fab color=\"secondary\" aria-label=\"Edit\" className={classes.fab} onClick={this.handleClickOpen}>\n            <BuildIcon/>\n        </Fab>\n        <Dialog\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={this.state.open}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n            Tools\n          </DialogTitle>\n          <DialogContent>\n            <List component=\"nav\">\n                {this.getContent()}\n            </List>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n\n\nexport default withStyles(styles)(CustomizedDialogDemo);\n","import styled from \"styled-components\";\nimport React, {Component} from 'react';\nimport MapContainer from './map/Map'\nimport Sidebar from './sidebar/Sidebar';\nimport Tools from './tools/ToolsPopup';\n\n\nconst MapWrapperDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  align-items: stretch;\n`;\n\nclass MapWrapper extends Component{\n  constructor(props){\n    super(props);\n    this.state = {\n      receivedJson: this.props.receivedJson,\n      layers: [],\n    };\n  }\n\n  updateMapLayers(layers){\n    this.setState({ layers: layers });\n  }\n\n  render() {\n    return (\n      <div>\n        <Sidebar updateMapLayers={this.updateMapLayers.bind(this)}/>\n        <MapWrapperDiv>\n          <MapContainer />\n        </MapWrapperDiv> \n        <Tools />\n      </div> \n    );\n  }\n}\n\n\nexport default MapWrapper;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = []\n\nconst layers = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ADD_LAYER':\n        return [\n          ...state.slice(0, state.length),\n          action.layer,\n          ...state.slice(state.length)\n        ]\n\n      case 'DELETE_LAYER':\n        return  state.filter(function(layer){return layer.id != action.layer })\n      \n      case 'UPDATE_LAYER_FILL':\n        return state.map((layer) => {\n          // Find the item with the matching id\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              fillColor: action.fillColor \n            }\n          }\n          return layer;\n        });\n      \n        case 'UPDATE_LAYER_BORDER':\n        return state.map((layer) => {\n          // Find the item with the matching id\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              borderColor: action.borderColor \n            }\n          }\n          return layer;\n        });\n\n      case 'UPDATE_LAYER_VISIBILITY':\n        return state.map((layer) => {\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              visible: action.visibility \n            }\n          }\n          return layer;\n        });\n      \n      case 'UPDATE_LAYER_NAME':\n        return state.map((layer) => {\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              name: action.name \n            }\n          }\n          return layer;\n        });\n\n      case 'TOGGLE_TODO':\n        return state.map(todo =>\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n        )\n      default:\n        return state\n    }\n  }\n  \n  export default layers\n\n","import { combineReducers } from 'redux';\nimport layers from './layers';\nexport default combineReducers({\n layers\n});","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport MainWrapper from './components/MainWrapper'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n// import configureStore from './store';\n\nimport registerServiceWorker from './registerServiceWorker'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <MainWrapper />\n    </Provider>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}