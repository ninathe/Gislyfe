{"version":3,"sources":["actions/index.js","components/utils.js","components/map/Map.js","components/sidebar/FileDrop.jsx","components/sidebar/Layer.js","components/sidebar/LayerList.js","containers/CreateLayerList.js","components/sidebar/Sidebar.js","components/tools/ToolsContent.js","components/tools/Buffer.js","components/tools/doDoubleFeatureAction.js","components/tools/Difference.js","components/tools/Within.js","components/tools/Intersection.js","components/tools/Tools.js","components/tools/ToolsPopup.js","components/MainWrapper.js","registerServiceWorker.js","reducers/layers.js","reducers/rootReducer.js","index.js"],"names":["addLayer","layer","type","lastId","colors","formatJson","json","name","noBorder","opacity","visible","id","fillColor","length","fillOpacity","borderColor","mapboxgl","accessToken","Map","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","layersInMap","lng","lat","zoom","_this2","_this$state","map","container","mapContainer","style","center","_map","on","addDefaultLayers","bind","_map$getCenter","getCenter","setState","toFixed","getZoom","updateMapLayers","deleteLayers","addLayers","i","getSource","removeLayer","removeSource","layers","source","addVectorLayer","addLayerByType","features","geometry","addPolygonLayer","addLineLayer","addPointLayer","console","log","data","layout","visibility","paint","circle-radius","circle-color","circle-opacity","line-color","line-opacity","line-width","fill-color","fill-opacity","url","source-layer","sourceLayer","formated","nedreElvehavn","format2","grytaNord","format3","grytaSyd","_this3","_this$state2","react_default","a","createElement","className","ref","el","Component","mapDispatchToProps","connect","_ref","dispatch","readFile","file","callback","reader","FileReader","onload","e","JSON","parse","target","result","ex","alert","readAsText","index_es","dropzoneText","filesLimit","dropZoneClass","dropzoneParagraphClass","acceptedFiles","onDrop","onDelete","deleteLayer","showPreviewsInDropzone","Layer","open","layerName","handleClick","changeFillColor","color","undefined","updateLayerFill","changeBorderColor","updateLayerBorder","changeName","updateLayerName","updateInput","value","window","confirm","toggleVisibility","stopPropagation","updateLayerVisibility","classes","List_default","component","root","ListItem_default","button","onClick","ListItemIcon_default","Visibility_default","VisibilityOff_default","ListItemText_default","inset","primary","ExpandLess_default","ExpandMore_default","Collapse_default","in","timeout","unmountOnExit","disablePadding","nested","Title_default","TextField_default","onChange","label","margin","IconButton_default","iconButton","aria-label","Done_default","FormatColorFill_default","lib_default","defaultValue","BorderColor_default","Button_default","Divider_default","React","withStyles","theme","width","maxWidth","backgroundColor","palette","background","paper","paddingLeft","spacing","unit","LayerList","Fragment","ListSubheader_default","sidebar_Layer","assign","key","layerID","Sidebar","handleDrawerOpen","handleDrawerClose","_this$props","AppBar_default","position","classNames","appBar","defineProperty","appBarShift","Toolbar_default","disableGutters","menuButton","hide","Menu_default","Typography_default","variant","noWrap","Drawer_default","drawer","anchor","drawerPaper","drawerHeader","direction","ChevronLeft_default","ChevronRight_default","FileDrop","CreateLayerList","display","transition","transitions","create","easing","sharp","duration","leavingScreen","concat","marginLeft","easeOut","enteringScreen","marginRight","flexShrink","objectSpread","alignItems","padding","mixins","toolbar","justifyContent","content","flexGrow","contentShift","withTheme","ToolsContent","handleChange","event","newLayers","chosenLayers","updateText","submitValues","hasOwnProperty","layerdata","filter","l","push","textVal","newLayer","submitForm","close","types","validLayers","forEach","field","getValidLayers","actions","core_index_es","form","autoComplete","selectionFields","select","textField","SelectProps","MenuProps","menu","helperText","getFilteredLayers","MenuItem_default","Info_default","flexWrap","dense","marginTop","Buffer","submitBuffer","submitInput","geom","turf","units","tools_ToolsContent","isMultiPolygon","FC","convertToPolygons","polygons","poly","coordinates","coord","polygon","doDoubleFeatureAction","FeatureCollection1","FeatureCollection2","action","actionType","multi","newGeojson","poly1","poly2","newGeometry","newName","Difference","submitDifference","geom1","geom2","difference","Within","submitWithin","within","Intersection","submitIntersection","intersection","tools","icon","Inbox_default","Tools","btnClicked","tool","buttonClick","DialogTitle","borderBottom","divider","closeButton","right","top","grey","children","onClose","DialogTitle_default","disableTypography","Close_default","DialogContent","MuiDialogContent","CustomizedDialogDemo","borderTop","MuiDialogActions","selectedTool","handleClickOpen","handleClose","ButtonClicked","btn","getContent","tools_Within","tools_Buffer","tools_Intersection","tools_Difference","tools_Tools","Fab_default","fab","Build_default","Dialog_default","aria-labelledby","ToolsPopup_DialogTitle","ToolsPopup_DialogContent","float","bottom","extendedIcon","MapWrapperDiv","styled","div","_templateObject","MainWrapper","sidebar_Sidebar","map_Map","ToolsPopup","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","error","initialState","arguments","toConsumableArray","slice","todo","completed","combineReducers","store","createStore","rootReducer","ReactDOM","render","es","components_MainWrapper","document","getElementById","URL","process","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.81f6f36f.chunk.js","sourcesContent":["\nexport const addLayer = layer => ({\n  type: 'ADD_LAYER',\n  layer\n})\n\nexport const deleteLayer = layer => ({\n  type: 'DELETE_LAYER',\n  layer\n})\n\nexport const updateLayers = layer => ({\n  type: 'UPDATE_LAYERS',\n  layer\n})\n\nexport const updateLayerFill = (layerID, fillColor) => ({\n  type: 'UPDATE_LAYER_FILL',\n  layerID,\n  fillColor\n})\nexport const updateLayerBorder = (layerID, borderColor) => ({\n  type: 'UPDATE_LAYER_BORDER',\n  layerID,\n  borderColor\n})\n\nexport const updateLayerVisibility = (layerID, visibility) => ({\n  type: 'UPDATE_LAYER_VISIBILITY',\n  layerID,\n  visibility\n})\n\nexport const updateLayerName = (layerID, name) => ({\n  type: 'UPDATE_LAYER_NAME',\n  layerID,\n  name\n})\n\nexport const toggleTodo = id => ({\n  type: 'TOGGLE_TODO',\n  id\n})\n\n","let lastId = 0;\nlet colors = ['#ff1744', '#2979ff', '#00b8d4', '#00bfa5',  '#ff6d00', '#00bfa5', '#ffd600', '#d50000' ]\n\n\nexport default function formatJson(json, name, noBorder, opacity) {\n    if(!json.name)\n      json.name = \"Layer\" + lastId\n    if(name)\n      json.name = name\n    if(!json.visible)\n      json.visible = \"visible\"\n    if(!json.id)\n      json.id = \"layer-\"+lastId;\n    if(!json.fillColor)\n      json.fillColor = colors[lastId%colors.length]\n    json.fillOpacity = opacity?opacity:1\n    if(!noBorder && !json.borderColor)\n      json.borderColor = \"black\"\n    if(noBorder)\n      json.borderColor = null\n    lastId++;\n    return json\n}\n","import React, { Component } from 'react'\nimport '../../styles/map.css'\nimport mapboxgl from 'mapbox-gl'\n//Default map layers\nimport grytaNord from './mapLayers/gryta-nord.json';\nimport grytaSyd from './mapLayers/gryta-syd.json';\nimport nedreElvehavn from './mapLayers/nedre-elvehavn.json';\n//Redux\nimport { connect } from \"react-redux\";\nimport { addLayer } from '../../actions'\n//Util function\nimport formatJson from '../utils';\n\nmapboxgl.accessToken = 'pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4M29iazA2Z2gycXA4N2pmbDZmangifQ.-g_vE53SD2WrJ6tFX7QHmA';\n\n\nclass Map extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      layersInMap: [],\n      lng: 10.4,        //Trondheim\n      lat: 63.435,\n      zoom: 15\n    };\n  }\n\n\n  componentDidMount() {\n    const { lng, lat, zoom } = this.state;\n\n    const map = new mapboxgl.Map({\n      container: this.mapContainer,\n      style: 'mapbox://styles/mapbox/light-v10', //Style of map \n      center: [lng, lat],\n      zoom\n    });\n    \n    this._map = map;\n\n    //Adding default layers when map has been loaded\n    map.on('load', function () {\n      this.addDefaultLayers();\n    }.bind(this));\n\n    //Updating map state when moving the map\n     map.on('move', () => {\n      const { lng, lat } = map.getCenter();\n\n      this.setState({\n        lng: lng.toFixed(4),\n        lat: lat.toFixed(4),\n        zoom: map.getZoom().toFixed(2)\n      });\n    });\n\n  }\n  \n  componentDidUpdate() {\n    this.updateMapLayers()\n  }\n\n  updateMapLayers(props){\n    this.deleteLayers();\n    this.addLayers();    \n  }\n\n\n  //Deleting all layers and sources in map\n  deleteLayers(){\n    for (let i = 0; i < this.state.layersInMap.length; i++) {\n      if(this._map.getSource(this.state.layersInMap[i].id)){\n        this._map.removeLayer(this.state.layersInMap[i].id)\n        this._map.removeSource(this.state.layersInMap[i].id)\n      }\n      //Deleting polygon-outlines\n      if(this._map.getSource(this.state.layersInMap[i].id+'_outline')){\n        this._map.removeLayer(this.state.layersInMap[i].id + '_outline')\n        this._map.removeSource(this.state.layersInMap[i].id + '_outline')\n      }\n\n    }\n  }\n\n  addLayers(){\n    for (let i = 0; i < this.props.layers.length; i++) {\n      let layer = this.props.layers[i]\n      if(layer.source)\n        this.addVectorLayer(layer)  \n      else \n        this.addLayerByType(this.props.layers[i]);\n        \n    }\n    this.state.layersInMap = this.props.layers;\n  }\n\n\n  //Checking type of layer\n  addLayerByType(layer){\n\n    let type = layer.features ? layer.features[0].geometry.type : layer.geometry.type //FIX: Some layers received from Turf doesn't have features\n    switch (type) {\n      case 'Polygon':\n        this.addPolygonLayer(layer);\n        break;\n      case 'MultiPolygon':\n        this.addPolygonLayer(layer);\n        break;\n      case 'MultiLineString':\n        this.addLineLayer(layer);\n        break;\n      case 'Point':\n        this.addPointLayer(layer);\n        break;\n      default:\n        console.log('Unidentified layer type!!' + layer.type);\n        \n    }\n  }\n\n  //Adding point-layer\n  addPointLayer(layer) {\n    this._map.addLayer({\n      'id': layer.id,\n      'type': 'circle',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'circle-radius': 5,\n        'circle-color': layer.fillColor,\n        'circle-opacity': 1\n      }\n    });\n  }\n\n  //Line layer input\n  addLineLayer(layer) {\n    let map = this._map\n    map.addLayer({\n      'id': layer.name,\n      'type': 'line',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'line-color': layer.borderColor,\n        'line-opacity': 1,\n        'line-width': 2\n      }\n    });\n\n  }\n  \n\n\n  //Polygon layer\n  addPolygonLayer(layer) {\n    let map = this._map\n\n    map.addLayer({\n      'id': layer.id,\n      'type': 'fill',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'fill-color': layer.fillColor,\n        'fill-opacity': layer.fillOpacity\n      }\n    });\n\n    map.addLayer({\n      'id': layer.id + '_outline',\n      'type': 'line',\n      'source': {\n        'type': 'geojson',\n        'data': layer\n      },\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'line-color': layer.borderColor,\n        'line-opacity': 1 ,\n        'line-width': 1\n      }\n    });\n  }\n\n  addVectorLayer(layer){ \n    this._map.addLayer({\n      'id': layer.id,\n      'type': 'fill',\n      'source': {\n        type: 'vector',\n        url: layer.source\n      },\n      'source-layer': layer.sourceLayer,\n      'layout': {'visibility': layer.visible },\n      'paint': {\n        'fill-color': layer.fillColor,\n        'fill-opacity': layer.fillOpacity,\n      }\n    })\n  }\n\n  //Adding some layers at start \n  addDefaultLayers(){\n    let formated = formatJson(nedreElvehavn,'Nedre elvehavn', true)\n    this.props.addLayer(formated) \n    let format2 = formatJson(grytaNord, 'Gryta nord', true)\n    this.props.addLayer(format2) \n    let format3 = formatJson(grytaSyd, 'Gryta syd', true)\n    this.props.addLayer(format3) \n\n  }\n\n  render() {\n    const { lng, lat, zoom } = this.state;\n\n    return (\n        <div className=\"map\" ref={el => this.mapContainer = el} />\n    );\n  }\n}\n\n\n\n//Container for connecting Map to state -- Redux\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(Map);","import React, {Component} from 'react';\nimport {DropzoneArea} from 'material-ui-dropzone';\n//Redux\nimport { connect } from 'react-redux'\nimport { addLayer } from '../../actions'\nimport '../../styles/App.css'           //css\nimport formatJson from '../utils';      //Utils\n\n\nconst Filedrop = ({dispatch}) => {\n  \n  function setupReader(file) {\n    readFile(file, function (json) {\n    dispatch(addLayer(json))                            //Add file to database\n    });\n  }\n\n  function readFile(file, callback){\n    let reader = new FileReader();\n\n    reader.onload = function(e){\n      try{\n        let json = JSON.parse(e.target.result)\n        callback(formatJson(json));                        //Formating json \n      } catch(ex){\n        alert('ex when trying to parse json = ' + ex);    //Can't parse json\n      }\n    }\n\n    reader.readAsText(file);\n  }\n\n  //When deleting layer --> Update state (dispatch deleteLayer)\n  function deleteLayer(file){\n    readFile(file, function (json) {\n      dispatch(deleteLayer(json))\n    });\n  }\n\n  return (\n    <DropzoneArea \n        dropzoneText={\"Drop Json-files here\"} \n        filesLimit={8}\n        dropZoneClass={\"HalloKlasse\"}\n        dropzoneParagraphClass={\"TekstDrop\"}\n        acceptedFiles= {['application/json/*']} \n        onDrop={setupReader}\n        onDelete={deleteLayer}\n        showPreviewsInDropzone={false}\n        />\n  )\n}\n \nexport default connect()(Filedrop);","import React from 'react';\n//Components from Material ui: \nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Collapse from '@material-ui/core/Collapse';\nimport ExpandLess from '@material-ui/icons/ExpandLess';\nimport ExpandMore from '@material-ui/icons/ExpandMore';\nimport Title from '@material-ui/icons/Title';\nimport FormatColorFill from '@material-ui/icons/FormatColorFill';\nimport BorderColor from '@material-ui/icons/BorderColor';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport Divider from '@material-ui/core/Divider';\nimport ColorPicker from 'material-ui-color-picker'\nimport TextField from '@material-ui/core/TextField';\nimport IconButton from '@material-ui/core/IconButton';\nimport DoneIcon from '@material-ui/icons/Done';\nimport Button from '@material-ui/core/Button';\n\n\n//styling for material-ui component\nconst styles = theme => ({\n  root: {\n    width: '100%',\n    maxWidth: 360,\n    backgroundColor: theme.palette.background.paper,\n  },\n  nested: {\n    paddingLeft: theme.spacing.unit * 4,\n  },\n});\n\nclass Layer extends React.Component {\n  state = {\n    open: false,\n    visible: this.props.visible,\n    layerName: this.props.name\n  }\n\n  handleClick = () => {           //Toggle open\n    this.setState(state => ({ open: !state.open }));\n  }\n\n  //Edit layer\n  changeFillColor = (color) =>{   \n    if(color!=undefined)\n      this.props.updateLayerFill(this.props.id, color)\n  }\n   \n  changeBorderColor = (color) =>{\n    if(color!=undefined)\n      this.props.updateLayerBorder(this.props.id, color)\n  }\n\n  changeName = () =>{\n    this.props.updateLayerName(this.props.id, this.state.layerName)\n  }\n\n\n  //When textfield is updating \n  updateInput=(e)=>{\n    this.setState({layerName: e.target.value})\n  }\n\n  deleteLayer = () =>{\n    if(window.confirm(\"Are you sure you want to delete the layer: \"+ this.props.name))\n      this.props.deleteLayer(this.props.id)\n  }\n  \n  toggleVisibility = (e) =>{\n    e.stopPropagation();\n    this.setState(state => ({ visible: !state.visible }));\n    this.props.updateLayerVisibility(this.props.id, (this.props.visible == \"visible\"? \"none\":\"visible\"))\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <List\n        component=\"nav\"\n        className={classes.root}\n      >\n        <ListItem button onClick={this.handleClick}>\n          <ListItemIcon>\n          {this.props.visible == \"visible\" ? <Visibility button onClick={this.toggleVisibility.bind(this)} /> : <VisibilityOff button onClick={this.toggleVisibility} />}\n          </ListItemIcon>\n          <ListItemText inset primary={this.props.name} />\n          {this.state.open ? <ExpandLess /> : <ExpandMore />}\n        </ListItem>\n        <Collapse in={this.state.open} timeout=\"auto\" unmountOnExit>\n          <List component=\"div\" disablePadding>\n            <ListItem  className={classes.nested} >\n              <ListItemIcon>\n                <Title />\n              </ListItemIcon>\n              <TextField\n                onChange={this.updateInput.bind(this)}\n                id=\"standard-dense\"\n                label=\"Edit name\"\n                margin=\"dense\"\n              />\n              <IconButton className={classes.iconButton} aria-label=\"Change\" onClick={this.changeName.bind(this)}>\n                <DoneIcon />\n              </IconButton>\n\n            </ListItem> \n            <ListItem button className={classes.nested}>\n              <ListItemIcon>\n                <FormatColorFill />\n              </ListItemIcon>\n              <ListItemText inset primary=\"Fill color\" />\n              <ColorPicker\n                name='color'\n                defaultValue={this.props.fillColor}\n                onChange={this.changeFillColor.bind(this)}\n              />\n            </ListItem>\n            <ListItem button className={classes.nested}>\n              <ListItemIcon>\n                <BorderColor />\n              </ListItemIcon>\n              <ListItemText inset primary=\"Border color\" />\n              <ColorPicker\n                name='color'\n                defaultValue={this.props.borderColor}\n                onChange={this.changeBorderColor.bind(this)}\n              />\n            </ListItem>\n            <ListItem  className={classes.nested}>\n            <Button \n              color=\"secondary\" \n              className={classes.button}\n              onClick={this.deleteLayer.bind(this)}>\n              Delete layer\n            </Button>\n            <Divider/>\n            </ListItem>\n          </List>\n        </Collapse>\n      </List>\n    );\n  }\n}\n\n\nexport default withStyles(styles)(Layer);","import React from 'react'\n//Material ui\nimport List from '@material-ui/core/List'\nimport ListSubheader from '@material-ui/core/ListSubheader';\nimport Layer from './Layer' \n\n\nconst LayerList = ({ layers, updateLayerVisibility, updateLayerFill, updateLayerBorder, updateLayerName, deleteLayer }) => (\n  <React.Fragment>\n    {layers.length>0?<ListSubheader>LAYERS</ListSubheader>:null}\n    <List>\n      {layers.length>0?(layers.map(layer =>\n        <Layer\n          key={layer.id}\n          layer={layer.name}\n          updateLayerVisibility={updateLayerVisibility}\n          updateLayerFill={updateLayerFill}\n          updateLayerBorder={updateLayerBorder}\n          updateLayerName={updateLayerName}\n          deleteLayer={deleteLayer}\n          {...layer}\n        />\n      )) : <div></div>}\n      \n    </List>\n  </React.Fragment>\n  \n)\n\nexport default LayerList\n","import { connect } from \"react-redux\";\nimport { updateLayerVisibility, updateLayerFill, updateLayerBorder, updateLayerName, deleteLayer} from \"../actions\"; //Redux actions\nimport LayerList from \"../components/sidebar/LayerList\";\n\n\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\n\n//actions to update state - available for LayerList\nconst mapDispatchToProps ={\n  updateLayerVisibility,\n  updateLayerFill,\n  updateLayerBorder, \n  updateLayerName,\n  deleteLayer\n};\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(LayerList);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\n\n//Material ui\nimport { withStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Divider from '@material-ui/core/Divider';\nimport IconButton from '@material-ui/core/IconButton';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\n\n//Components and containers\nimport FileDrop from './FileDrop';\nimport CreateLayerList from '../../containers/CreateLayerList'\n\n\nconst drawerWidth = 340;\n\n//Styling for material ui component\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  appBar: {\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    marginLeft: drawerWidth,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginLeft: 12,\n    marginRight: 20,\n  },\n  hide: {\n    display: 'none',\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0,\n  },\n  drawerPaper: {\n    width: drawerWidth,\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n    justifyContent: 'flex-end',\n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    marginLeft: -drawerWidth,\n  },\n  contentShift: {\n    transition: theme.transitions.create('margin', {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n    marginLeft: 0,\n  },\n});\n\nclass Sidebar extends React.Component {\n  state = {\n    open: false,\n  };\n\n  handleDrawerOpen = () => {\n    this.setState({ open: true });\n  };\n\n  handleDrawerClose = () => {\n    this.setState({ open: false });\n  };\n\n  render() {\n    const { classes, theme } = this.props;\n    const { open } = this.state;\n\n    //GUI\n    return (\n      <div className={classes.root}>\n        <AppBar\n          position=\"fixed\"\n          color=\"primary\"\n          className={classNames(classes.appBar, {\n            [classes.appBarShift]: open,\n          })}\n          \n        >\n          <Toolbar disableGutters={!open}>\n            <IconButton\n              color=\"inherit\"\n              aria-label=\"Open drawer\"\n              onClick={this.handleDrawerOpen}\n              className={classNames(classes.menuButton, open && classes.hide)}\n            >\n              <MenuIcon />\n            </IconButton>\n            <Typography variant=\"h6\" color=\"inherit\" noWrap>\n              GISLYFE\n            </Typography>\n          </Toolbar>\n        </AppBar>\n        <Drawer\n          className={classes.drawer}\n          variant=\"persistent\"\n          anchor=\"left\"\n          open={open}\n          classes={{\n            paper: classes.drawerPaper,\n          }}\n        >\n          <div className={classes.drawerHeader}>\n            <IconButton onClick={this.handleDrawerClose}>\n              {theme.direction === 'ltr' ? <ChevronLeftIcon /> : <ChevronRightIcon />}\n            </IconButton>\n          </div>\n          <FileDrop ></FileDrop>\n          <Divider />\n          <CreateLayerList></CreateLayerList>\n          \n        \n        </Drawer>\n      </div>\n    );\n  }\n}\n\nSidebar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  theme: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles, { withTheme: true })(Sidebar);","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withStyles } from '@material-ui/core/styles';\nimport { TextField, Typography, IconButton, Button } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { addLayer } from '../../actions'\n\n\n  //Styling material-ui component\n  const styles = theme => ({\n    container: {\n      display: 'flex',\n      flexWrap: 'wrap',\n    },\n    textField: {\n      marginLeft: theme.spacing.unit,\n      marginRight: theme.spacing.unit,\n      width: 200,\n    },\n    dense: {\n      marginTop: 19,\n    },\n    menu: {\n      width: 200,\n    },\n  });\n\nclass ToolsContent extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {chosenLayers: {}}\n  }\n\n  // Changehandler - selectionField \n  handleChange = name => event => {\n    debugger\n    let newLayers = this.state.chosenLayers;\n    newLayers[name] = event.target.value\n    this.setState({ ['chosenLayers']: newLayers });  //Update layers\n  };\n\n  // Changehandler - textField\n  updateText = name => event => {\n    this.setState({ [name]: event.target.value });\n  };\n\n  submitValues() { \n    var submitValues = {layers:[]}    //Object with data to submit\n    for(var layer in this.state.chosenLayers){          //Adding all layers\n      if(this.state.chosenLayers.hasOwnProperty(layer)){\n        let layerdata = this.props.layers.filter(l => l.id == this.state.chosenLayers[layer])[0]\n        submitValues.layers.push(layerdata)\n      }\n    }\n    submitValues.textVal = this.state.textVal ? (this.state.textVal) : null; //Adding textVal if exsists\n    let newLayer = this.props.submitForm(submitValues) //Creating a new layer\n    this.props.addLayer(newLayer);                     //Adding layer to global state - Redux\n\n    this.props.close();                                //Closing popup\n\n  }\n\n  getValidLayers(types) {           //each field can be filtered on different types i.e. Polygon and MultiPolygon\n    let validLayers = []\n    this.props.layers.forEach(layer => {\n      types.forEach(type => {\n        if(layer.features[0].geometry.type == type)\n          validLayers.push(layer)\n      });\n    });\n    return validLayers;\n  }\n\n  getFilteredLayers(field){           \n    let validLayers = (field.type != undefined) ? this.getValidLayers(field.type) : this.props.layers\n    debugger\n    return validLayers\n  }\n\n  render() {\n    const actions = [\n        <Button\n          primary={true}\n          form=\"myform\"\n          onClick={this.submitValues.bind(this)}\n          >SUBMIT\n          </Button>,\n      ];\n    let sfCounter = 0;\n    return (\n    <React.Fragment>\n    {this.props.layers.length>0?\n      <form className={this.props.classes.container} autoComplete=\"off\" id = \"myform\">\n      \n        {this.props.selectionFields.map(field => (\n            <TextField\n            id=\"standard-select-currency\"\n            select\n            label={field.value}\n            className={this.props.classes.textField}\n            value = {this.state.chosenLayers[field.id]}    \n            onChange={this.handleChange(field.id)}        //updating textVal state\n            SelectProps={{\n              MenuProps: {\n                className: this.props.classes.menu,\n              },\n            }}\n            helperText={field.helperText}\n            margin=\"normal\"\n          >\n            {this.getFilteredLayers(field)    //Only show layers of right type \n                .map(layer => (  \n            <MenuItem key={layer.id} value={layer.id}>\n              {layer.name}\n            </MenuItem>\n          ))}\n            \n          </TextField>\n        \n        ))\n      \n      }\n\n        {this.props.textField ?         //Rendering textfield, if exsists\n            <TextField\n            id=\"standard-name\"\n            label={this.props.textField.value}\n            className={this.props.classes.textField}\n            onChange={this.updateText('textVal')}\n            margin=\"normal\"\n            helperText={this.props.textField.helperText}\n          /> : \n          null                          //return null if it doesn't   \n        }\n        \n        <div>\n            {actions} \n        </div> \n        \n      </form>\n    :\n        <React.Fragment>\n            <IconButton>\n                <InfoIcon />\n            </IconButton>\n            <Typography variant=\"h7\" color=\"inherit\">\n                Add layers in map. \n            </Typography>\n        </React.Fragment>\n    }   \n    </React.Fragment>\n      \n    );\n  }\n}\n\n//REDUX\nconst mapStateToProps = (state) => ({\n  layers: state.layers\n});\n\nconst mapDispatchToProps = {\n  addLayer\n};\n\n\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withStyles(styles)(ToolsContent));","\n// import React from 'react'\nimport React, { Component } from 'react'\n\n//Material ui\nimport formatJson from '../utils';\nimport ToolContent from './ToolsContent';\nimport * as turf from '@turf/turf'\n\nclass Buffer extends Component{\n  constructor(props) {\n    super(props);\n  }\n\n  // Changehandler - submit buffer\n  submitBuffer = submitInput => {\n    if(submitInput.layers[0] != undefined && submitInput.textVal != null){\n      let geom = submitInput.layers[0]; //In buffer -- Only one layer\n\n      let buffer = turf.buffer(geom, submitInput.textVal, {units: 'meters'});      //Buffer geojson\n      let bufferName = geom.name + \"_Buffer\"\n      return formatJson(buffer,bufferName, true, 0.5)      //formatJson buffer-geojson, name, noBorder, fill-opacity  \n    } else{\n      alert(\"Velg layer og bufferverdi\")\n    }  \n  }\n\n  render() {\n    let textField = {value: \"Buffer\", helperText: \"Value in meter\" }\n    let layer = {value: \"Layer\", helperText: \"Select layer\", id:\"Layer1\"}\n    return(\n      <ToolContent \n      selectionFields={[layer]}\n      textField={textField}\n      submitForm={this.submitBuffer}\n      close ={this.props.close}\n      ></ToolContent>\n    ); \n  }\n}\n\nexport default Buffer;\n","import formatJson from '../utils';\nimport * as turf from '@turf/turf'\n\n\n\nconst doDoubleFeatureAction=(FeatureCollection1, FeatureCollection2, action, actionType, multi)=> {\n    let newGeojson = {\n      \"type\": \"FeatureCollection\",\n      \"features\": []\n    }\n    \n\n    if(!multi && isMultiPolygon(FeatureCollection1)){\n        FeatureCollection1.features = convertToPolygons(FeatureCollection1)\n    } \n    if(!multi && isMultiPolygon(FeatureCollection2 )){\n        FeatureCollection2.features = convertToPolygons(FeatureCollection2)\n    } \n\n    FeatureCollection1.features.forEach(poly1 => {\n        FeatureCollection2.features.forEach(poly2 => {\n            let newGeometry = action(poly1.geometry, poly2.geometry)\n            if(newGeometry!= null)\n                newGeojson.features.push(newGeometry)\n        });\n    });\n    \n    let newName = FeatureCollection1.name+\"_\"+FeatureCollection2.name + \"_\"+ actionType;\n\n    return(formatJson(newGeojson,newName, true, 0.5));\n  }\nconst isMultiPolygon = (FC)=>{  \n    if(FC.features[0].geometry.type == \"MultiPolygon\")\n        return true\nreturn false\n}\n\nconst convertToPolygons = (FC)=>{  \n    let polygons =[] \n    FC.features.forEach(poly=>{\n        if(poly.geometry.type == \"MultiPolygon\"){\n            poly.geometry.coordinates.forEach(coord=>{\n                let polygon = turf.polygon(coord)\n                polygons.push(polygon)\n            })\n        }\n    });\n    return polygons;\n}\n\n  \n\n  export default doDoubleFeatureAction","\n// import React from 'react'\nimport React, { Component } from 'react'\n\n//Material ui\nimport ToolContent from './ToolsContent';\nimport * as turf from '@turf/turf'\nimport doDoubleFeatureAction from './doDoubleFeatureAction';\nimport formatJson from '../utils';\n\n\n\nclass Difference extends Component{\n  constructor(props) {\n    super(props);\n  }\n\n  submitDifference = submitInput =>{\n    if (submitInput.layers.length != 2)\n      alert(\"Velg to lag til utregning.\")\n    else if(submitInput.layers[0] == submitInput.layers[1])\n      alert(\"Vennligst velg 2 forskjellige lag.\")\n    else{\n      //Get geometries\n      let geom1 = submitInput.layers[0] \n      let geom2 = submitInput.layers[1]\n\n      let difference = turf.difference(geom1.features[0], geom2.features[0]);      //Difference geojson\n      if(difference != null){\n        let differenceName = geom1.name+\"_\"+geom2.name + \"_Difference\"\n        return (formatJson(difference,differenceName, true, 0.5))    //return formated Json difference-geojson, name, noBorder, fill-opacity\n      }\n    }\n    \n   \n  }\n\n  render() {\n    let layer1 = {value: \"Layer1\", helperText: \"Select layer\", id:\"Layer1\"}\n    let layer2 = {value: \"Layer2\", helperText: \"Select layer\", id:\"Layer2\"}\n    \n    return(\n      <ToolContent \n      selectionFields={[layer1, layer2]}\n      submitForm={this.submitDifference}\n      close ={this.props.close}\n      ></ToolContent>\n    ); \n  }\n}\n\nexport default Difference;\n","\n// import React from 'react'\nimport React, { Component } from 'react'\n\n//Material ui\nimport ToolContent from './ToolsContent';\nimport * as turf from '@turf/turf'\nimport formatJson from '../utils';\n\n\n\nclass Within extends Component{\n  constructor(props) {\n    super(props);\n  }\n\n\n  submitWithin = submitInput =>{\n    if (submitInput.layers.length != 2)\n      alert(\"Velg to lag til utregning.\")\n    else{\n      //Get geometries\n      let geom1 = submitInput.layers[0] \n      let geom2 = submitInput.layers[1]\n\n      let within = turf.pointsWithinPolygon(geom1, geom2);      //Within geojson\n      if(within != null){\n        let withinName = geom1.name+\"_\"+geom2.name + \"Within\"\n        return (formatJson(within,withinName, true, 0.5))    //return formated Json within-geojson, name, noBorder, fill-opacity\n      }\n    }\n    \n   \n  }\n\n  render() {\n    let layer1 = {value: \"Layer1\", type: [\"Point\"], helperText: \"Select point-layer\", id:\"Layer1\"}\n    let layer2 = {value: \"Layer2\", type: [\"Polygon\", \"MultiPolygon\"], helperText: \"Select layer\", id:\"Layer2\"}\n    \n    return(\n      <ToolContent \n      selectionFields={[layer1, layer2]}\n      submitForm={this.submitWithin}\n      close ={this.props.close}\n      ></ToolContent>\n    ); \n  }\n}\n\nexport default Within;\n","\n// import React from 'react'\nimport React, { Component } from 'react'\n\n//Material ui\nimport ToolContent from './ToolsContent';\nimport * as turf from '@turf/turf'\nimport doDoubleFeatureAction from './doDoubleFeatureAction';\n\n\nclass Intersection extends Component{\n  constructor(props) {\n    super(props);\n  }\n\n  submitIntersection = submitInput =>{\n    if (submitInput.layers.length != 2)\n      alert(\"Velg to lag til utregning.\")\n    else if(submitInput.layers[0] == submitInput.layers[1])\n      alert(\"Vennligst velg 2 forskjellige lag.\")\n    else{\n      //Get geojson from state \n      let geom1 = submitInput.layers[0]  \n      let geom2 = submitInput.layers[1]\n      let intersection = doDoubleFeatureAction(geom1, geom2, turf.intersect, \"intersection\")\n      \n      if(intersection.features.length == 1 && intersection.features[0] == null)\n        alert(\"Det er ingen overlapp mellom valgte lag.\")\n      else{\n        return intersection   //Returning formated json\n      }\n\n    }\n    \n  }\n\n  render() {\n    let layer1 = {value: \"Layer1\", type: [\"Polygon\", \"MultiPolygon\"], helperText: \"Select layer\", id:\"Layer1\"}\n    let layer2 = {value: \"Layer2\", type: [\"Polygon\", \"MultiPolygon\"], helperText: \"Select layer\", id:\"Layer2\"}\n    \n    return(\n      <ToolContent \n      selectionFields={[layer1, layer2]}\n      submitForm={this.submitIntersection}\n      close ={this.props.close}\n      ></ToolContent>\n    ); \n  }\n}\n\nexport default Intersection;\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { connect } from \"react-redux\";\n// import { updateLayers } from \"../actions\";\nimport { Layer } from 'react-mapbox-gl';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport InboxIcon from '@material-ui/icons/Inbox';\n\n\n\nconst tools = [\n    {\n      value: 'Within',\n      icon: <InboxIcon />,\n    },\n    {\n        value: 'Buffer',\n        icon: <InboxIcon />,\n    },\n    {\n      value: 'Intersection',\n      icon: <InboxIcon />,\n    },\n    {\n      value: 'Difference',\n      icon: <InboxIcon />,\n    },\n  ];\nconst styles = theme => ({\n  fab: {\n    margin: theme.spacing.unit,\n    float: \"right\",\n    bottom: '80px',\n  },\n  extendedIcon: {\n    marginRight: theme.spacing.unit,\n  },\n});\n\nclass Tools extends Component{\n  constructor(props) {\n    super(props);\n    this.state = {\n      layersInMap: [],\n    };\n  }\n\n  buttonClick(e,value){\n      console.log(value)\n      this.props.btnClicked(value)\n  }\n\n  render() {\n    return (\n      <React.Fragment>\n\n        {tools.map(tool => (\n            <ListItem  id = {tool.value} onClick={((e) => this.buttonClick(e, tool.value))}>\n                <ListItemIcon>\n                    {tool.icon}\n                </ListItemIcon>\n                <ListItemText primary={tool.value} />\n            </ListItem>\n        ))}\n      </React.Fragment>\n    );\n  }\n}\n\nexport default Tools;","import React from 'react';\nimport { withStyles } from '@material-ui/core/styles';\n//Material-ui\nimport Dialog from '@material-ui/core/Dialog';\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\nimport MuiDialogContent from '@material-ui/core/DialogContent';\nimport MuiDialogActions from '@material-ui/core/DialogActions';\nimport IconButton from '@material-ui/core/IconButton';\nimport CloseIcon from '@material-ui/icons/Close';\nimport Typography from '@material-ui/core/Typography';\nimport Fab from '@material-ui/core/Fab';\nimport BuildIcon from '@material-ui/icons/Build';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\n//Components\nimport Buffer from './Buffer';\nimport Difference from './Difference';\nimport Within from './Within';\nimport Intersection from './Intersection';\nimport Tools from './Tools';\n\n\n\n\nfunction ListItemLink(props) {\n    return <ListItem button component=\"a\" {...props} />;\n  }\nconst styles = theme => ({\n    fab: {\n      margin: theme.spacing.unit,\n      float: \"right\",\n      bottom: '80px',\n    },\n    extendedIcon: {\n      marginRight: theme.spacing.unit,\n    },\n  });\n\nconst DialogTitle = withStyles(theme => ({\n  root: {\n    borderBottom: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n  },\n  closeButton: {\n    position: 'absolute',\n    right: theme.spacing.unit,\n    top: theme.spacing.unit,\n    color: theme.palette.grey[500],\n  },\n}))(props => {\n  const { children, classes, onClose } = props;\n  return (\n    <MuiDialogTitle disableTypography className={classes.root}>\n      <Typography variant=\"h6\">{children}</Typography>\n      {onClose ? (\n        <IconButton aria-label=\"Close\" className={classes.closeButton} onClick={onClose}>\n          <CloseIcon />\n        </IconButton>\n      ) : null}\n    </MuiDialogTitle>\n  );\n});\n\nconst DialogContent = withStyles(theme => ({\n  root: {\n    margin: 0,\n    padding: theme.spacing.unit * 2,\n  },\n}))(MuiDialogContent);\n\nconst DialogActions = withStyles(theme => ({\n  root: {\n    borderTop: `1px solid ${theme.palette.divider}`,\n    margin: 0,\n    padding: theme.spacing.unit,\n  },\n}))(MuiDialogActions);\n\nclass CustomizedDialogDemo extends React.Component {\n  state = {\n    open: false,\n    selectedTool: null\n  };\n\n  handleClickOpen = () => {\n    this.setState({\n      open: true,\n    });\n  };\n\n  handleClose = () => {\n    this.setState({ open: false, selectedTool: null });\n  };\n\n  ButtonClicked= (btn) => {\n    this.setState({\n      selectedTool: btn,\n    });\n  }  \n\n  getContent = () => {\n    switch(this.state.selectedTool) {\n      case 'Within':\n        return <ListItem><Within close ={this.handleClose}></Within></ListItem>;\n      case 'Buffer':\n        return <ListItem><Buffer close ={this.handleClose}></Buffer></ListItem>;\n      case 'Intersection':\n        return <ListItem><Intersection close ={this.handleClose}></Intersection></ListItem>;\n      case 'Difference':\n        return <ListItem><Difference close ={this.handleClose}></Difference></ListItem>;\n      default:\n        return <Tools btnClicked= {this.ButtonClicked}></Tools>;\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    return (\n      <div>\n        <Fab color=\"secondary\" aria-label=\"Edit\" className={classes.fab} onClick={this.handleClickOpen}>\n            <BuildIcon/>\n        </Fab>\n        <Dialog\n          onClose={this.handleClose}\n          aria-labelledby=\"customized-dialog-title\"\n          open={this.state.open}\n        >\n          <DialogTitle id=\"customized-dialog-title\" onClose={this.handleClose}>\n            Tools\n          </DialogTitle>\n          <DialogContent>\n            <List component=\"nav\">\n                {this.getContent()}\n            </List>\n          </DialogContent>\n        </Dialog>\n      </div>\n    );\n  }\n}\n\n\n\nexport default withStyles(styles)(CustomizedDialogDemo);\n","import styled from \"styled-components\";\nimport React, {Component} from 'react';\nimport MapContainer from './map/Map'\nimport Sidebar from './sidebar/Sidebar';\nimport Tools from './tools/ToolsPopup';\n\n\n//Inline CSS\nconst MapWrapperDiv = styled.div`\n  display: flex;\n  flex-direction: row;\n  min-height: 100vh;\n  align-items: stretch;\n`;\n\nclass MainWrapper extends Component{\n  \n  render() {\n    return (\n      <div>\n        <Sidebar />\n        <MapWrapperDiv>\n          <MapContainer />\n        </MapWrapperDiv> \n        <Tools />\n      </div> \n    );\n  }\n}\n\n\nexport default MainWrapper;","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","let initialState = []\n\nconst layers = (state = initialState, action) => {\n    switch (action.type) {\n      case 'ADD_LAYER':\n        return [\n          ...state.slice(0, state.length),\n          action.layer,\n          ...state.slice(state.length)\n        ]\n\n      case 'DELETE_LAYER':\n        return  state.filter(function(layer){return layer.id != action.layer })\n      \n      case 'UPDATE_LAYER_FILL':\n        return state.map((layer) => {\n          // Find the item with the matching id\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              fillColor: action.fillColor \n            }\n          }\n          return layer;\n        });\n      \n        case 'UPDATE_LAYER_BORDER':\n        return state.map((layer) => {\n          // Find the item with the matching id\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              borderColor: action.borderColor \n            }\n          }\n          return layer;\n        });\n\n      case 'UPDATE_LAYER_VISIBILITY':\n        return state.map((layer) => {\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              visible: action.visibility \n            }\n          }\n          return layer;\n        });\n      \n      case 'UPDATE_LAYER_NAME':\n        return state.map((layer) => {\n          if(layer.id === action.layerID) {\n            return {\n              ...layer,  \n              name: action.name \n            }\n          }\n          return layer;\n        });\n\n      case 'TOGGLE_TODO':\n        return state.map(todo =>\n          todo.id === action.id ? { ...todo, completed: !todo.completed } : todo\n        )\n      default:\n        return state\n    }\n  }\n  \n  export default layers\n\n","import { combineReducers } from 'redux';\nimport layers from './layers';\nexport default combineReducers({\n layers\n});","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport MainWrapper from './components/MainWrapper'\nimport { Provider } from 'react-redux'\nimport { createStore } from 'redux'\n\nimport registerServiceWorker from './registerServiceWorker'\nimport rootReducer from './reducers/rootReducer'\n\nconst store = createStore(rootReducer)\n\nReactDOM.render(\n    <Provider store={store}>\n        <MainWrapper />\n    </Provider>,\n    document.getElementById('root')\n);\nregisterServiceWorker();\n"],"sourceRoot":""}